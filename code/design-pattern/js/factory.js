/**
 * 工厂模式
 * 
 * 一个类或对象中往往会包含内部的对象，创建这种对象时如果内部对象使用 new 关键字和类构造函数创建，会导致这两个类之间产生依赖性。
 * 通过使用一个方法决定要实例化哪个具体的类。
 * 简单工厂模式:另外使用一个类或者静态方法来生成一个实例。
 * 复杂工厂模式：使用子类来决定一个成员变量应该是哪个具体类的实例。
 */

// 简单工厂模式
// 工厂方法模式
/**
 * 工厂模式和简单工厂模式的区别在于，工厂模式不是使用一个类或者对象创建实例而是使用一个子类创建实例，工厂模式是一个将其成员对象的实例化推迟到子类中进行。
 * 
 * 适用场合：
 * 1.动态实现
 * 2.节省设置开销
 * 3.用许多小型对象组成一个大对象
 */
